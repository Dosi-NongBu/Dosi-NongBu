name: Build and Deploy to EC2

on:
  push:
    branches: ["main"]

env:
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: dosinongbu-bucket
  AWS_CODE_DEPLOY_APPLICATION: dosinongbu-application-CD
  AWS_CODE_DEPLOY_GROUP: dosinongbu-deployment-group

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      # JDK 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 권한 부여
      - name: Grant execute permission for gradlew
        run: |
          cd backend
          chmod +x ./gradlew
        shell: bash

      - name: Build and Test
        run: ./gradlew build test

      # 빌드 파일을 zip 형식으로 압축
      - name: Make zip file
        run: |
          cd ../
          zip -r ./$GITHUB_SHA.zip .
        shell: bash

      # npm 설치
      - name: Set up npm
        uses: actions/setup-node@v2
        run: |
          npm install
          npm run build

      # AWS 권한 설정
      - name: AWS credential 설정
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.CICD_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.CICD_SECRET_KEY }}

      # S3에 빌드 파일 업로드
      - name: Upload to S3
        run: |
          aws s3 cp --region ap-northeast-2 ./build s3://$AWS_S3_BUCKET/build
          aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$AWS_S3_BUCKET/$GITHUB_SHA.zip

      # EC2에 배포
      - name: EC2에 배포
        run: aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} --s3-location bucket=$AWS_S3_BUCKET,key=$GITHUB_SHA.zip,bundleType=zip
        
